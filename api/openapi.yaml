openapi: 3.1.0
info:
  contact:
    name: Lenra
    url: https://www.lenra.io/contact.html
  description: The API usable by the Lenra applications
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Lenra server internal API
  version: 0.0.0
servers:
- description: Devtool
  url: http://localhost:4001
security:
- bearerAuth:
  - api
  - transaction
tags:
- description: Data management API
  name: Data
paths:
  /app-api/v1-api/v1/data/colls/{coll}:
    delete:
      operationId: deleteCollection
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Collection deleted
      summary: Deletes a collection from database
      tags:
      - Data
      x-accepts: application/json
  /app-api/v1/data/colls/{coll}/docs:
    get:
      operationId: getDocuments
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/data.document'
                type: array
          description: Documents found
      summary: Gets documents from database
      tags:
      - Data
      x-accepts: application/json
    post:
      operationId: createDocument
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: The document to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data.document'
          description: Document created
      summary: Creates a document in database
      tags:
      - Data
      x-content-type: application/json
      x-accepts: application/json
  /app-api/v1/data/colls/{coll}/docs/{id}:
    delete:
      operationId: deleteDocumentById
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      - description: The document identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data.document'
          description: Document deleted
      summary: Deletes a document from database
      tags:
      - Data
      x-accepts: application/json
    get:
      operationId: getDocumentById
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      - description: The document identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data.document'
          description: Document created
      summary: Gets a document from database
      tags:
      - Data
      x-accepts: application/json
    put:
      operationId: updateDocumentById
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      - description: The document identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/data.document'
        description: The document to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data.document'
          description: Document updated
      summary: Updates a document in database
      tags:
      - Data
      x-content-type: application/json
      x-accepts: application/json
  /app-api/v1/data/colls/{coll}/find:
    post:
      operationId: findDocuments
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/findDocuments_request'
        description: The query to find documents
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data.result.find'
          description: Documents found
      summary: Finds documents in database
      tags:
      - Data
      x-content-type: application/json
      x-accepts: application/json
  /app-api/v1/data/colls/{coll}/updateMany:
    post:
      operationId: updateManyDocuments
      parameters:
      - description: The document collection name
        explode: false
        in: path
        name: coll
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateManyDocuments_request'
        description: The query to find documents
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Documents updated
      summary: Updates many documents in database
      tags:
      - Data
      x-content-type: application/json
      x-accepts: application/json
  /app-api/v1/data/transaction:
    post:
      operationId: createTransaction
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The transaction token
                type: string
          description: Transaction created
      security:
      - bearerAuth:
        - api
      summary: Creates a transaction
      tags:
      - Data
      x-accepts: application/json
  /app-api/v1/data/transaction/commit:
    post:
      operationId: commitTransaction
      responses:
        "200":
          description: Transaction commited
      security:
      - bearerAuth:
        - transaction
      summary: Commits a transaction
      tags:
      - Data
      x-accepts: application/json
  /app-api/v1/data/transaction/abort:
    post:
      operationId: abortTransaction
      responses:
        "200":
          description: Transaction aborted
      security:
      - bearerAuth:
        - transaction
      summary: Aborts a transaction
      tags:
      - Data
      x-accepts: application/json
components:
  schemas:
    data.document:
      additionalProperties: {}
      description: A document in MongoDB database
      title: Document
    data.query:
      additionalProperties: {}
      description: Mongo data query
      title: Query
    data.result.find:
      additionalProperties: {}
      description: Find query result.
      title: FindResult
    data.update:
      additionalProperties: {}
      description: Mongo data query
      title: Query
    findDocuments_request:
      additionalProperties: {}
      properties:
        query:
          additionalProperties: {}
          description: Mongo data query
          title: Query
        projection:
          additionalProperties: {}
          nullable: true
      required:
      - query
    updateManyDocuments_request:
      additionalProperties: {}
      properties:
        filter:
          additionalProperties: {}
          description: Mongo data query
          title: Query
        update:
          additionalProperties: {}
          description: Mongo data query
          title: Query
      required:
      - filter
      - update
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http

